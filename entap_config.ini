#-------------------------------
# [configuration]
#-------------------------------
#Specify which EnTAP database you would like to download/generate.
#    0. Serialized Database (default)
#    1. SQLITE Database
#Either or both can be selected with an additional flag. The serialized database will be faster although requires more memory usage. The SQLITE database may be slightly slower.
data-type=0,
#-------------------------------
# [entap]
#-------------------------------
#Path to the EnTAP binary database
entap-db-bin=/bin/entap_database.bin
#Path to the EnTAP SQL database (not needed if you are using the binary database)
entap-db-sql=/databases/entap_database.db
#Path to the EnTAP graphing script (entap_graphing.py)
entap-graph=/src/entap_graphing.py
#-------------------------------
# [expression_analysis]
#-------------------------------
#Specify the FPKM threshold with expression analysis
#EnTAP will filter out transcripts below this value! (default: 0.5)
fpkm=0.5
#Specify this flag if your BAM/SAM file was generated through single-end reads
#Note: this is only required in expression analysis
#Default: paired-end
single-end=false
#-------------------------------
# [expression_analysis-rsem]
#-------------------------------
#Execution method of RSEM Calculate Expression.
#Example: rsem-calculate-expression
rsem-calculate-expression=/libs/RSEM-1.3.0//rsem-calculate-expression
#Execution method of RSEM SAM Validate.
#Example: rsem-sam-validator
rsem-sam-validator=/libs/RSEM-1.3.0//rsem-sam-validator
#Execution method of RSEM Prep Reference.
#Example: rsem-prepare-reference
rsem-prepare-reference=/libs/RSEM-1.3.0//rsem-prepare-reference
#Execution method of RSEM Convert SAM
#Example: convert-sam-for-rsem
convert-sam-for-rsem=/libs/RSEM-1.3.0//convert-sam-for-rsem
#-------------------------------
# [frame_selection]
#-------------------------------
#Select this option if all of your sequences are complete proteins.
#At this point, this option will merely flag the sequences in your output file
complete=false
#Specify the Frame Selection software you would like to use. Only one flag can be specified.
#Specify flags as follows:
#    1. GeneMarkS-T (default)
#    2. Transdecoder
frame-selection=1
#-------------------------------
# [frame_selection-genemarks-t]
#-------------------------------
#Method to execute GeneMarkST. This may be the path to the executable.
genemarkst-exe=/libs/gmst_linux_64/gmst.pl
#-------------------------------
# [frame_selection-transdecoder]
#-------------------------------
#Method to execute TransDecoder.LongOrfs. This may be the path to the executable or simply TransDecoder.LongOrfs
transdecoder-long-exe=TransDecoder.LongOrfs
#Method to execute TransDecoder.Predict. This may be the path to the executable or simply TransDecoder.Predict
transdecoder-predict-exe=TransDecoder.Predict
#Transdecoder only. Specify the minimum protein length
transdecoder-m=100
#-------------------------------
# [general]
#-------------------------------
#-------------------------------
# [ontology]
#-------------------------------
# Specify the ontology software you would like to use
#Note: it is possible to specify more than one! Just usemultiple --ontology flags
#Specify flags as follows:
#    0. EggNOG (default)
#    1. InterProScan
ontology=0,
#Specify the Gene Ontology levels you would like printed
#Default: 0, 3, 4
#A level of 0 means that every term will be printed! It is possible to specify multiple flags as well with
#multiple --level flags
#Example: --level 0 --level 3 --level 1
level=0,3,4,
#-------------------------------
# [ontology-eggnog]
#-------------------------------
#Path to EggNOG SQL database.
eggnog-sql=/databases/eggnog.db
#Path to EggNOG DIAMOND configured database.
eggnog-dmnd=/bin/eggnog_proteins.dmnd
#-------------------------------
# [ontology-interproscan]
#-------------------------------
#Execution method of InterProScan.
interproscan-exe=interproscan.sh
#Select which databases you would like for InterProScan. Databases must be one of the following:
#    -tigrfam
#    -sfld
#    -prodom
#    -hamap
#    -pfam
#    -smart
#    -cdd
#    -prositeprofiles
#    -prositepatterns
#    -superfamily
#    -prints
#    -panther
#    -gene3d
#    -pirsf
#    -coils
#    -morbidblite
#Make sure the database is downloaded, EnTAP will not check!
#--protein tigrfam --protein pfam
protein=
#-------------------------------
# [similarity_search]
#-------------------------------
#Method to execute DIAMOND. This can be a path to the executable or simple 'diamond'
diamond-exe=/libs/diamond-0.9.9/bin/diamond
#Specify the type of species/taxon you are analyzing and would like hits closer in taxonomic relevance to be favored (based on NCBI Taxonomic Database)
#Note: replace all spaces with underscores '_'
taxon=
#Select the minimum query coverage to be allowed during similarity searching (default: 50.0)
qcoverage=50
#Select the minimum target coverage to be allowed during similarity searching (default: 50.0)
tcoverage=50
#Specify the contaminants you would like to filter out from similarity searching
#Note: since hits are based upon a multitide of factors a contaminant might be the best hit for a query!
#Contaminants can be selected by species (homo_sapiens) or through a specific taxon (homo)
#If your taxon is more than one word just replace the spaces with underscores (_)
contam=
#Specify the E-Value that will be used as a cutoff during similarity searching
e-value=1e-05
#Path to a list of keywords that should be used to specify uninformativeness of hits during similarity searching. Generally something along the lines of 'hypothetical' or 'unknown' are used. Each term should be on a new line of the file being linked to. This can be used if you would like to tag certain descriptions.
#Example (defaults):
#    -conserved
#    -predicted
#    -unknown
#    -hypothetical
#    -putative
#    -unidentified
#    -uncultured
#    -uninformative
#Ensure each word is on a separate line in the file. EnTAP will take the each line as a new uninformative word!
uninformative=
